# Author: Kirk Saunders
#
# Last-modified: 9/19/2019
#
# Purpose: This makefile compiles all .cc files in a directory,
# then links them together into an executable. It determines
# a source file's dependencies automatically.

# Assumes the following file exists in the proper place.
# This is taken from the makefile that Professor Chelberg
# provided.
include /home/cs425/code-egs/Makefile.defs
#include /mnt/c/dev/libraries/Makefile.defs
#include C:/dev/libraries/Makefile_win.defs
# Next line says what options to use to compile programs

# set rm options to unix-based if not defined (on windows I define them in my makefile.defs)
ifndef RM
	RM = rm -f
endif
ifndef RM_DIR
	RM_DIR = rm -rf
endif

OPTIONS += -Wall

# Name of the output program file
OUTPUT_PROG = prog2

# Directory to put .d and .o files in
TEMP_DIR = .objs

# Gets all .cc .c and .cpp files and appends .o to it
OBJ_FILES = $(addprefix $(TEMP_DIR)/,$(addsuffix .o,$(wildcard *.cc *.c *.cpp)))
# Gets .d files of each .o file
DEPENDENCIES = $(patsubst %.o,%.d,$(OBJ_FILES))

all: $(OUTPUT_PROG)

$(OUTPUT_PROG): $(OBJ_FILES)
	$(CC) $(OBJ_FILES) $(InitShader) $(LDLIBS) -o $@

$(TEMP_DIR):
	mkdir $(TEMP_DIR) $(ERROR_SUPPRESS)

# includes .d files that are generated by g++
-include $(DEPENDENCIES)

# Note: -MMD flag generates .d files for generated .o file
.SECONDEXPANSION:
$(OBJ_FILES): $$(notdir $$(basename $$@)) | $(TEMP_DIR)
	$(CC) -c $< $(OPTIONS) -MMD -o $@

clean:
	$(RM) $(OUTPUT_PROG)$(EXE_SUFFIX) $(ERROR_SUPPRESS)
	$(RM_DIR) $(TEMP_DIR) $(ERROR_SUPPRESS)

.PHONY: clean all